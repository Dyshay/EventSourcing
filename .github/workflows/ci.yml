name: CI Build and Test

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      checks: write
      pull-requests: write

    # MongoDB service - only used if MONGODB_CONNECTION_STRING secret is not set
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore EventSourcing.sln

    - name: Build
      run: dotnet build EventSourcing.sln --configuration Release --no-restore

    - name: Test
      run: dotnet test EventSourcing.sln --configuration Release --no-build --verbosity normal --logger "trx;LogFileName=test-results.trx"
      env:
        # Use secret if available, otherwise fall back to local MongoDB service
        MONGODB_CONNECTION_STRING: ${{ secrets.MONGODB_CONNECTION_STRING || 'mongodb://localhost:27017' }}
        CI: true

    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: '**/test-results.trx'
        check_name: Test Results
        comment_mode: off

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: '**/test-results.trx'

    - name: Pack NuGet packages (for testing)
      run: |
        mkdir -p ./packages
        echo "Packing NuGet packages to verify build process..."

        dotnet pack src/EventSourcing.Abstractions/EventSourcing.Abstractions.csproj \
          --configuration Release \
          --no-build \
          --output ./packages \
          -p:PackageVersion=0.0.0-ci-${{ github.run_number }} \
          -p:IncludeSymbols=true \
          -p:SymbolPackageFormat=snupkg

        dotnet pack src/EventSourcing.Core/EventSourcing.Core.csproj \
          --configuration Release \
          --no-build \
          --output ./packages \
          -p:PackageVersion=0.0.0-ci-${{ github.run_number }} \
          -p:IncludeSymbols=true \
          -p:SymbolPackageFormat=snupkg

        dotnet pack src/EventSourcing.MongoDB/EventSourcing.MongoDB.csproj \
          --configuration Release \
          --no-build \
          --output ./packages \
          -p:PackageVersion=0.0.0-ci-${{ github.run_number }} \
          -p:IncludeSymbols=true \
          -p:SymbolPackageFormat=snupkg

        dotnet pack src/EventSourcing.CQRS/EventSourcing.CQRS.csproj \
          --configuration Release \
          --no-build \
          --output ./packages \
          -p:PackageVersion=0.0.0-ci-${{ github.run_number }} \
          -p:IncludeSymbols=true \
          -p:SymbolPackageFormat=snupkg

    - name: List generated packages
      run: |
        echo "Generated packages:"
        ls -la ./packages/

    - name: Validate packages
      run: |
        echo "Validating NuGet packages..."
        for package in ./packages/*.nupkg; do
          echo "Checking $package"
          dotnet nuget verify "$package" || echo "Warning: Package verification failed for $package"
        done

    - name: Upload package artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages-ci-${{ github.run_number }}
        path: |
          ./packages/*.nupkg
          ./packages/*.snupkg
        retention-days: 7
